FUNC int get_sum()
PARA int a
judge = judge + 1
count = count + 1
b = 0 + 0
BEZ a 1 $Label1
#0 = a - 1
PUSH #0
CALL get_sum
b = Ret + 0
judge = judge + 1
LABEL $Label1
LABEL $Label2
#0 = b + a
RET id #0
FUNC int count_to_10()
judge = judge + 1
PUSH 10
CALL get_sum
#0 = Ret + 0
RET id #0
FUNC char higher()
PARA char a
RET char '6'
FUNC char prt_message()
judge = judge + 1
PRT string " !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
RET char '9'
FUNC void test_global_variable()
#1 = judge + 0
judge = #1 + 1
a = 0 + 0
flag = 0 + 0
count = 2 + 0
letter[0] = 97 + 0
letter[1] = 49 + 0
letter[2] = 95 + 0
letter[3] = 43 + 0
letter[4] = 65 + 0
PRT id count
#0 = letter[0]
PRT id #0
BNZ count 2 $Label3
judge = judge + 1
LABEL $Label3
LABEL $Label4
BNZ count 1 $Label5
judge = judge + 1
flag = 1 + 0
LABEL $Label5
LABEL $Label6
BNZ flag 0 $Label7
judge = judge + 1
LABEL $Label7
LABEL $Label8
_ = 1 + 0
__ = 2 + 0
___ = 3 + 0
__a__ = 4 + 0
_a_ = 5 + 0
flag = 0 + 0
BNZ _ 1 $Label9
judge = judge + 1
LABEL $Label9
LABEL $Label10
BNZ _ 0 $Label11
flag = 1 + 0
LABEL $Label11
LABEL $Label12
BNZ flag 0 $Label13
judge = judge + 1
LABEL $Label13
LABEL $Label14
flag = 0 + 0
BNZ __ 2 $Label15
judge = judge + 1
LABEL $Label15
LABEL $Label16
BNZ __ 0 $Label17
judge = judge + 1
flag = 1 + 0
LABEL $Label17
LABEL $Label18
BNZ flag 0 $Label19
judge = judge + 1
LABEL $Label19
LABEL $Label20
flag = 0 + 0
BNZ ___ 3 $Label21
judge = judge + 1
LABEL $Label21
LABEL $Label22
BNZ ___ 0 $Label23
judge = judge + 1
flag = 1 + 0
LABEL $Label23
LABEL $Label24
BNZ flag 0 $Label25
judge = judge + 1
LABEL $Label25
LABEL $Label26
flag = 0 + 0
BNZ __a__ 4 $Label27
judge = judge + 1
LABEL $Label27
LABEL $Label28
BNZ __a__ 0 $Label29
judge = judge + 1
flag = 1 + 0
LABEL $Label29
LABEL $Label30
BNZ flag 0 $Label31
judge = judge + 1
LABEL $Label31
LABEL $Label32
flag = 0 + 0
BNZ _a_ 5 $Label33
judge = judge + 1
LABEL $Label33
LABEL $Label34
BNZ _a_ 0 $Label35
judge = judge + 1
flag = 1 + 0
LABEL $Label35
LABEL $Label36
BNZ flag 0 $Label37
judge = judge + 1
LABEL $Label37
LABEL $Label38
RET
FUNC void test_global_const()
_ = 100 + 0
BNZ _ 100 $Label39
judge = judge + 1
LABEL $Label39
LABEL $Label40
num[0] = 100 + 0
num[1] = 101 + 0
#0 = num[0]
BNZ #0 100 $Label41
judge = judge + 1
LABEL $Label41
LABEL $Label42
#0 = num[1]
BNZ #0 101 $Label43
judge = judge + 1
LABEL $Label43
LABEL $Label44
judge = judge + 1
#0 = 1 - 1
BNZ #0 0 $Label45
judge = judge + 1
LABEL $Label45
LABEL $Label46
#0 = 97 - 97
BNZ #0 0 $Label47
judge = judge + 1
LABEL $Label47
LABEL $Label48
#0 = 95 - 95
BNZ #0 0 $Label49
judge = judge + 1
LABEL $Label49
LABEL $Label50
y = 97 + 0
x = y + 97
BNZ x 194 $Label51
judge = judge + 1
LABEL $Label51
LABEL $Label52
#0 = 1 - 1
BNZ #0 0 $Label53
judge = judge + 1
LABEL $Label53
LABEL $Label54
#0 = 1 - 0
BNZ #0 0 $Label55
judge = judge + 1
LABEL $Label55
LABEL $Label56
x = 0 + 0
BGEZ x 2 $Label57
LABEL $Label59
judge = judge + 1
x = x + 1
BLZ x 2 $Label59
LABEL $Label57
LABEL $Label58
RET
FUNC void test_brackets()
judge = judge + 1
RET
FUNC void test_compare_operator()
flag = 0 + 0
x = 0 + 0
y = 1 + 0
BGEZ x y $Label60
judge = judge + 1
LABEL $Label60
LABEL $Label61
BLEZ y x $Label62
judge = judge + 1
LABEL $Label62
LABEL $Label63
BNZ x y $Label64
judge = judge + 1
flag = 1 + 0
LABEL $Label64
LABEL $Label65
BNZ flag 0 $Label66
judge = judge + 1
LABEL $Label66
LABEL $Label67
BEZ x y $Label68
judge = judge + 1
LABEL $Label68
LABEL $Label69
x = 0 + 0
BGZ x 1 $Label70
LABEL $Label72
BGZ x y $Label73
judge = judge + 1
LABEL $Label73
LABEL $Label74
x = x + 1
BLEZ x 1 $Label72
LABEL $Label70
LABEL $Label71
x = 0 + 0
BGZ x 1 $Label75
LABEL $Label77
BLZ y x $Label78
judge = judge + 1
LABEL $Label78
LABEL $Label79
x = x + 1
BLEZ x 1 $Label77
LABEL $Label75
LABEL $Label76
RET
FUNC void test_expression()
#14 = judge + 0
c = 97 + 0
d = 98 + 0
e = 99 + 0
judge = #14 + 1
b = 0 + 0
a = b + 0
BNZ a 0 $Label80
judge = judge + 1
LABEL $Label80
LABEL $Label81
a = 0 - a
BNZ a 0 $Label82
judge = judge + 1
LABEL $Label82
LABEL $Label83
a = c + 0
BNZ a 97 $Label84
judge = judge + 1
LABEL $Label84
LABEL $Label85
a = 0 - c
BNZ a -97 $Label86
judge = judge + 1
LABEL $Label86
LABEL $Label87
a = 3 + 0
BNZ a 3 $Label88
judge = judge + 1
LABEL $Label88
LABEL $Label89
a = -1 + 0
BNZ a -1 $Label90
judge = judge + 1
LABEL $Label90
LABEL $Label91
a = 1 + 0
BNZ a 1 $Label92
judge = judge + 1
LABEL $Label92
LABEL $Label93
a = 1 + 0
BNZ a 1 $Label94
judge = judge + 1
LABEL $Label94
LABEL $Label95
a = -1 + 0
BNZ a -1 $Label96
judge = judge + 1
LABEL $Label96
LABEL $Label97
a = 1 + 0
BNZ a 1 $Label98
judge = judge + 1
LABEL $Label98
LABEL $Label99
a = -9 + 0
BNZ a -9 $Label100
judge = judge + 1
LABEL $Label100
LABEL $Label101
b = 5 + 0
#0 = num[b]
#1 = b + 1
#2 = num[#1]
#3 = #0 + #2
#4 = #3 + 3
CALL count_to_10
#5 = Ret + 0
#6 = letter[0]
#7 = #4 * #5
#8 = #7 / 3
#9 = 0 - #8
#10 = #9 + 97
#11 = #10 + 97
#12 = #11 - 2
a = #12 + #6
BNZ a 33 $Label102
judge = judge + 1
LABEL $Label102
LABEL $Label103
#14 = judge + 0
g = 113 + 0
f = 97 + 0
#0 = f * g
#1 = e + #0
#2 = d + #1
#3 = c * #2
b = 1 + 0
#4 = b + #3
a = b * #4
#0 = a / 1024
judge = #14 + #0
RET
FUNC void test_while()
b = 9 + 0
BLZ b 0 $Label104
LABEL $Label106
BLZ b 5 $Label107
judge = judge + 1
LABEL $Label107
LABEL $Label108
b = b - 1
BGEZ b 0 $Label106
LABEL $Label104
LABEL $Label105
b = 0 + 0
BGZ b 2 $Label109
LABEL $Label111
BNZ b 0 $Label112
judge = judge + 1
JMP $Label113
LABEL $Label112
BNZ b 1 $Label114
judge = judge + 1
JMP $Label115
LABEL $Label114
judge = judge + 1
LABEL $Label115
LABEL $Label113
b = b + 1
BLEZ b 2 $Label111
LABEL $Label109
LABEL $Label110
a = 0 + 0
b = 0 + 0
BGZ a 2 $Label116
LABEL $Label118
b = 0 + 0
BGZ b 2 $Label119
LABEL $Label121
judge = judge + 1
b = b + 1
BLEZ b 2 $Label121
LABEL $Label119
LABEL $Label120
a = a + 1
BLEZ a 2 $Label118
LABEL $Label116
LABEL $Label117
b = 0 + 0
a = 11 + 0
BGEZ b 10 $Label122
LABEL $Label124
num[b] = b * a
#0 = num[b]
judge = judge + #0
b = b + 1
a = a + 2
BLZ b 10 $Label124
LABEL $Label122
LABEL $Label123
RET
FUNC void test_if()
#1 = judge + 0
a = 0 + 0
flag = 0 + 0
judge = #1 + 1
#0 = 1 - 1
BNZ #0 0 $Label125
LABEL $Label125
LABEL $Label126
#0 = 1 - 1
BNZ #0 0 $Label127
LABEL $Label127
LABEL $Label128
#0 = 1 - 1
BNZ #0 0 $Label129
LABEL $Label129
LABEL $Label130
a = 0 + 0
BGZ a 1 $Label131
LABEL $Label133
#0 = 1 - 1
BNZ #0 0 $Label134
BNZ a 0 $Label136
judge = judge + 1
flag = 1 + 0
LABEL $Label136
LABEL $Label137
BNZ flag 0 $Label138
judge = judge + 1
LABEL $Label138
LABEL $Label139
LABEL $Label134
LABEL $Label135
flag = 0 + 0
a = a + 1
BLEZ a 1 $Label133
LABEL $Label131
LABEL $Label132
a = 0 + 0
#0 = 1 - 1
BNZ #0 0 $Label140
BGEZ a 2 $Label142
LABEL $Label144
judge = judge + 1
a = a + 1
BLZ a 2 $Label144
LABEL $Label142
LABEL $Label143
LABEL $Label140
LABEL $Label141
a = 0 + 0
BGZ a 1 $Label145
LABEL $Label147
#0 = 1 - 1
BNZ #0 0 $Label148
BNZ a 0 $Label150
judge = judge + 1
JMP $Label151
LABEL $Label150
judge = judge + 1
LABEL $Label151
LABEL $Label148
LABEL $Label149
a = a + 1
BLEZ a 1 $Label147
LABEL $Label145
LABEL $Label146
flag = 0 + 0
c = 97 + 0
BNZ c 97 $Label152
judge = judge + 1
LABEL $Label152
LABEL $Label153
BNZ c 98 $Label154
judge = judge + 1
flag = 1 + 0
LABEL $Label154
LABEL $Label155
BNZ flag 0 $Label156
judge = judge + 1
LABEL $Label156
LABEL $Label157
RET
FUNC void test_switch()
a = 0 + 0
b = 0 + 0
flag = 0 + 0
test = 0 + 0
BGZ a 6 $Label158
LABEL $Label160
BNZ a 0 $Label161
#0 = 1 - 1
BNZ #0 0 $Label163
judge = judge + 1
num[0] = 3 + 0
PUSH 3
CALL get_sum
num[3] = Ret + 0
LABEL $Label163
LABEL $Label164
#0 = 1 - 0
BNZ #0 0 $Label165
judge = judge + 1
flag = 1 + 0
LABEL $Label165
LABEL $Label166
BNZ flag 0 $Label167
judge = judge + 1
LABEL $Label167
LABEL $Label168
test = 1 + 0
JMP $Label162
LABEL $Label161
BNZ a 1 $Label169
judge = judge + 1
b = 0 + 0
BGZ b 2 $Label171
LABEL $Label173
judge = judge + 1
b = b + 1
BLEZ b 2 $Label173
LABEL $Label171
LABEL $Label172
test = 1 + 0
JMP $Label170
LABEL $Label169
BNZ a 2 $Label174
JMP $Label175
LABEL $Label174
judge = judge + 1
#0 = a / 3
BNZ #0 1 $Label176
judge = judge + 1
test = 1 + 0
LABEL $Label176
LABEL $Label177
BNZ test 0 $Label178
judge = judge + 1
LABEL $Label178
LABEL $Label179
test = 1 + 0
LABEL $Label175
LABEL $Label170
LABEL $Label162
BNZ test 0 $Label180
judge = judge + 1
LABEL $Label180
LABEL $Label181
test = 0 + 0
a = a + 1
BLEZ a 6 $Label160
LABEL $Label158
LABEL $Label159
a = 0 + 0
BGEZ a 3 $Label182
LABEL $Label184
BNZ a 0 $Label185
c = 97 + 0
LABEL $Label185
LABEL $Label186
BNZ a 1 $Label187
c = 98 + 0
LABEL $Label187
LABEL $Label188
BNZ a 2 $Label189
c = 99 + 0
LABEL $Label189
LABEL $Label190
BNZ c 97 $Label191
judge = judge + 1
JMP $Label192
LABEL $Label191
BNZ c 98 $Label193
judge = judge + 1
JMP $Label194
LABEL $Label193
judge = judge + 1
LABEL $Label194
LABEL $Label192
a = a + 1
BLZ a 3 $Label184
LABEL $Label182
LABEL $Label183
a = 1 + 0
BNZ a 1 $Label195
LABEL $Label195
LABEL $Label196
RET
FUNC void test_function()
a = 11 + 0
c = 97 + 0
judge = judge + 1
PUSH c
CALL higher
#0 = Ret + 0
CALL count_to_10
#1 = Ret + 0
#2 = #0 + #1
PRT id #2
CALL prt_message
RET
FUNC void test_printf()
x = 1 + 0
judge = judge + 1
PRT id x
x = 5 + 0
#0 = num[x]
#1 = x + 1
#2 = num[#1]
#3 = #0 + #2
#4 = #3 + 3
CALL count_to_10
#5 = Ret + 0
#6 = #4 * #5
#7 = #6 / 3
#8 = 0 - #7
#9 = #8 + 97
#10 = #9 + 97
#11 = #10 - 2
PRT id #11
RET
FUNC void test_scanf()
judge = judge + 1
READ int x
READ char m
#0 = judge + x
judge = #0 + m
READ char m
letter[3] = m + 0
judge = judge + m
READ int x
judge = judge + x
RET
FUNC void test_varib2()
judge = judge + 1
BNZ _ 1 $Label197
judge = judge + 1
LABEL $Label197
LABEL $Label198
RET
FUNC void test_varib()
judge = judge + 1
_ = 100 + 0
BNZ _ 100 $Label199
judge = judge + 1
LABEL $Label199
LABEL $Label200
CALL test_varib2
RET
FUNC void test_para4()
PARA int a
PARA int b
PARA int c
PARA int d
PARA int e
PARA int f
PARA int g
#0 = judge + a
#1 = #0 + b
#2 = #1 + c
#3 = #2 + d
#4 = #3 + e
#5 = #4 + f
judge = #5 + g
RET
FUNC int test_para1()
PARA int a
PARA int b
judge = judge + 1
RET int 1
FUNC char test_para2()
PARA char a
PARA char b
judge = judge + 1
RET char '9'
FUNC void test_para3()
PARA char a
PARA int b
judge = judge + 1
RET
FUNC void test_para()
judge = judge + 1
PUSH 1
PUSH 2
CALL test_para1
PUSH 97
PUSH 98
CALL test_para2
PUSH 97
PUSH 1
CALL test_para3
PUSH 1
PUSH 2
PUSH 3
PUSH 4
PUSH 5
PUSH 6
PUSH 7
CALL test_para4
RET
FUNC void main()
x = 0 + 0
judge = x + 1
CALL test_global_variable
CALL test_global_const
CALL test_brackets
CALL test_compare_operator
CALL test_expression
CALL test_while
CALL test_if
CALL test_switch
CALL test_function
CALL test_printf
CALL test_scanf
CALL test_varib
CALL test_para
PRT string "all test:"
PRT id judge
EXIT
