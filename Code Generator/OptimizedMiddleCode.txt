FUNC int factorial()
PARA int n
BGZ n 1 $Label1
RET int 1
JMP $Label2
LABEL $Label1
#0 = n - 1
PUSH #0
CALL factorial
#2 = n * Ret
RET id #2
LABEL $Label2
FUNC int mod()
FUNC void swap()
PARA int x
PARA int y
PRT string " x = "
PRT id x
PRT string " y = "
PRT id y
temp = x + 0
x = y + 0
y = temp + 0
PRT string " SWAP x = "
PRT id x
PRT string " SWAP y = "
PRT id y
RET
FUNC void complete_num()
PARA int val
j = val + 0
LABEL $Label3
n = -1 + 0
s = j + 0
i = 1 + 0
LABEL $Label4
#0 = j / i
x1 = #0 * i
PUSH j
PUSH i
CALL mod
#0 = x / y
#1 = #0 * y
x = x - #1
RET id x
BNZ Ret 0 $Label5
n = n + 1
s = s - i
BLZ n 128 $Label7
PRT string " OVERFLOW!          "
JMP $Label8
LABEL $Label7
k[n] = i + 0
LABEL $Label8
LABEL $Label5
LABEL $Label6
i = i + 1
BLZ i j $Label4
BNZ s 0 $Label9
PRT string " complete number: "
PRT id j
i = 0 + 0
LABEL $Label11
PRT string "  "
#0 = k[i]
PRT id #0
i = i + 1
BLEZ i n $Label11
PRT string "          "
LABEL $Label9
LABEL $Label10
j = j + 1
BLZ j 1024 $Label3
PRT string " ---------------------------------------------------------------          "
a = 0 + 0
i = 0 + 0
LABEL $Label12
c = j * n
b = a * i
#0 = b + b
a = #0 + c
i = i + 1
BLZ i 1024 $Label12
b = a + 0
i = 0 + 0
LABEL $Label13
b = b + i
i = i + 1
BLZ i 1024 $Label13
PRT string " b = "
PRT id b
PRT string " ---------------------------------------------------------------          "
h = 0 + 0
leap = 1 + 0
m = 2 + 0
LABEL $Label14
k2 = m / 2
i = 2 + 0
LABEL $Label15
#0 = m / i
x2 = #0 * i
PUSH m
PUSH i
CALL mod
#0 = x / y
#1 = #0 * y
x = x - #1
RET id x
BNZ Ret 0 $Label16
leap = 0 + 0
LABEL $Label16
LABEL $Label17
i = i + 1
BLEZ i k2 $Label15
BNZ leap 1 $Label18
PRT string " "
PRT id m
h = h + 1
#0 = h / 10
x2 = #0 * 10
BNZ x2 h $Label20
PRT string "          "
LABEL $Label20
LABEL $Label21
LABEL $Label18
LABEL $Label19
leap = 1 + 0
m = m + 1
BLEZ m 1024 $Label14
PRT string "          The total is "
PRT id h
RET
FUNC void main()
PUSH 10
CALL factorial
n = Ret + 0
PRT string " 10! = "
PRT id n
PUSH 5
PUSH 10
CALL swap
PUSH 2
CALL complete_num
