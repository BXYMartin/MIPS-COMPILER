FUNC int recursive()
PARA int x
PARA int y
PARA int z
PARA int p
PARA int q
BLEZ x 10 $Label1
RET id q
JMP $Label2
LABEL $Label1
#0 = x + 1
PUSH #0
PUSH y
PUSH z
PUSH p
PUSH q
CALL recursive
#1 = Ret + 0
RET id #1
LABEL $Label2
FUNC void main()
x = 1 + 0
y = 2 + 0
z = 3 + 0
n = 0 + 0
m = 0 + 0
f = 0 + 0
h = 0 + 0
j = 0 + 0
k = 0 + 0
l = 0 + 0
n = 0 + 0
m = 0 + 0
f = 0 + 0
h = 0 + 0
j = 0 + 0
k = 0 + 0
l = 0 + 0
n = 0 + 0
m = 0 + 0
f = 0 + 0
h = 0 + 0
j = 0 + 0
k = 0 + 0
l = 0 + 0
#0 = z * x
#1 = x - #0
#2 = x + y
#3 = z * x
#4 = #2 - #3
#5 = #4 + y
#6 = #5 - z
#7 = #1 * z
#8 = #6 + #7
#9 = z * y
#10 = #8 + #9
#11 = z * z
#12 = #10 + #11
#13 = z * x
#14 = x - #13
#15 = x + y
#16 = z * x
#17 = #15 - #16
#18 = #17 + y
#19 = #18 - z
#20 = #14 * z
#21 = #19 + #20
#22 = z * y
#23 = #21 + #22
#24 = z * z
#25 = #23 + #24
PUSH 0
PUSH 0
PUSH 0
PUSH 0
PUSH #25
CALL recursive
#26 = Ret + 0
#27 = 1 + #26
a[#12] = #27 + 0
n = 0 + 0
m = 0 + 0
f = 0 + 0
h = 0 + 0
j = 0 + 0
k = 2 + 0
l = 5 + 0
#0 = z * y
a[1] = #0 + 0
#0 = y - z
a[2] = #0 + 0
#0 = z * x
#1 = x - #0
#2 = x + y
#3 = z * x
#4 = #2 - #3
#5 = #4 + y
#6 = #5 - z
#7 = #1 * z
#8 = #6 + #7
#9 = z * y
#10 = #8 + #9
#11 = z * z
#12 = #10 + #11
PUSH 0
PUSH 0
PUSH 0
PUSH 0
PUSH #12
CALL recursive
#13 = Ret + 0
#14 = #13 - 3
j = #14 + 0
#0 = z * 0
l = #0 + 0
PRT id l
ENTER
PRT id j
ENTER
#0 = a[1]
PRT id #0
ENTER
#0 = a[2]
PRT id #0
ENTER
#0 = a[8]
PRT id #0
ENTER
EXIT
