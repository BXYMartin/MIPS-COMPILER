FUNC int add()
PARA int a
PARA int b
#0 = a + b
RET id #0
FUNC char get()
#0 = k + 1
k = #0 + 0
#0 = chararray[k]
RET id #0
FUNC int fib()
PARA int n
BGEZ n 0 $Label1
RET int 0
JMP $Label2
LABEL $Label1
BLEZ n 0 $Label3
#0 = n - 1
PUSH #0
CALL fib
#1 = Ret + 0
#2 = n - 2
PUSH #2
CALL fib
#3 = Ret + 0
#4 = #1 + #3
RET id #4
JMP $Label4
LABEL $Label3
RET int 1
LABEL $Label4
LABEL $Label2
FUNC void testexpr()
PRT string "test expr"
PUSH 10
PUSH 20
CALL add
#0 = Ret + 0
intarray[0] = #0 + 0
intarray[1] = -10 + 0
PUSH 200
PUSH 20
CALL add
#0 = Ret + 0
intarray[2] = #0 + 0
PUSH 85
PUSH 20
CALL add
#0 = Ret + 0
intarray[3] = #0 + 0
#0 = intarray[0]
#1 = #0 + 18
#2 = 2 * #1
#3 = 3 + #2
intarray[5] = #3 + 0
PUSH 5
CALL fib
#0 = Ret + 0
PUSH -1
CALL fib
#1 = Ret + 0
#2 = #0 + #1
intarray[6] = #2 + 0
j = 0 + 0
LABEL $Label5
#0 = intarray[j]
PRT id #0
#0 = j + 1
j = #0 + 0
BLEZ j 6 $Label5
RET
RET
FUNC void testempty()
RET
FUNC void main()
i = 0 + 0
k = 0 + 0
z = 10 + 0
chararray[0] = 104 + 0
chararray[1] = 101 + 0
chararray[2] = 108 + 0
chararray[3] = 108 + 0
chararray[4] = 111 + 0
READ int x
READ int y
READ char op
LABEL $Label6
#0 = chararray[i]
PRT id #0
#0 = i + 1
i = #0 + 0
BLZ i 5 $Label6
BEZ op 43 $Label8
BEZ op 45 $Label9
#0 = x * y
z = #0 + 0
JMP $Label7
LABEL $Label8
#0 = x + y
z = #0 + 0
JMP $Label7
LABEL $Label9
#0 = x - y
z = #0 + 0
JMP $Label7
LABEL $Label7
PRT string "test switch result:"
PRT id z
BLZ z 0 $Label11
#0 = k + 1
k = #0 + 0
JMP $Label12
LABEL $Label11
#0 = k + 3
k = #0 + 0
LABEL $Label12
CALL get
#0 = Ret + 0
tem = #0 + 0
BEZ tem 108 $Label13
PRT string "test string\n"
PRT string " !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
JMP $Label14
LABEL $Label13
PRT string "print string and expr, got char: "
PRT id tem
LABEL $Label14
CALL testexpr
CALL testempty
EXIT
